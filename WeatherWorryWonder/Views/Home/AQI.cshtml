@using WeatherWorryWonder.Models
@using WeatherWorryWonder.Controllers
@model ResultView
@{
    List<double> userLocation = (List<double>)Session["UserLocation"];
    double lat = userLocation[0];
    double lng = userLocation[1];

    //Sensor s = (Sensor)Session["ClosestSensor"];

    //double sensorLat = s.Lat;
    //double sensorLong = s.Long;

    double sLat1 = Model.TwoClosestSensors[0].Lat;
    double sLng1 = Model.TwoClosestSensors[0].Long;


    double sLat2 = Model.TwoClosestSensors[1].Lat;
    double sLng2 = Model.TwoClosestSensors[1].Long;

    double fLat = Model.Factorylat;
    double fLng = Model.Factorylong;

}
<div class="main">
    <div class="AQI" style="padding:10px; background-color: @Model.AQIColor1">

        <h2>
            The Air Quality(AQI) For Your Location is <span><b>@Model.O3AQI</b></span>
        </h2>
        <p>@Model.Recommendations</p>
    </div>

    <div class="futureAQI">
        <img src="~/Content/img/air_quality.png" />
        <br />
        <div id="predictedAQI"></div>

        <h2 class="header">Tomorrow's Forcast</h2>
        <table id="forecast">
            <tr>
                <th>TEMPERATURE</th>
                <th>WIND</th>
                <th>HUMIDITY</th>
            </tr>
            <tr>
                <td>@Math.Round(Model.Weather[1].TemperatureF) °F</td>
                <td>@Math.Round(Model.Weather[1].WindSpeed * 2.2) MPH</td>
                <td>@Model.Weather[1].Humidity %</td>
            </tr>

        </table>
    </div>

    <div class="otherPollutants">

    </div>

    <div class="recommendations">
        <br />


        <div id="myDiv"></div>

    </div>

    <div class="map">
        <h4>Next Closest Sensor AQI: @Model.Second03AQI</h4>
        <h4>EPA's AQI For Grand Rapids: @Model.EpaAQI</h4>
        <div id="map"></div>
        <h4 style="background-color: @HomeController.ColorWarningEO(Model.C2H4OPPM)">
            Ethylene Oxide: @Model.C2H4OPPM PPM
            <br />
            @Model.PollutantWarning
        </h4>
        <p>Would you like to help reduce ozone? Click <a href="~/Home/OzoneRecommendationTips/">here</a> to find out how!</p>
    </div>

    <div class="weather">
    </div>

<div class="VOC">

</div>
</div>

<script>
function initMap() {
    var userLatLong = { lat: @lat, lng: @lng };
    var sensor1LatLong = { lat: @sLat1, lng: @sLng1 };
    var sensor2LatLong = { lat: @sLat2, lng: @sLng2 };
    var factorySensor = { lat: @fLat, lng: @fLng };

    var map = new google.maps.Map(
        document.getElementById('map'),
        { zoom: 12, center: userLatLong });
    var iconBase = "http://maps.google.com/mapfiles/kml/pal2/";

    var markerUser = new google.maps.Marker({
        position: userLatLong,
        icon: { url: iconBase + "icon10.png"},
        map: map
    });

    var markerSensor1 = new google.maps.Marker({
        position: sensor1LatLong,
        title: "@Model.O3AQI",
        label: { color: 'black', fontWeight: 'bold', fontSize: '20px', text: '@Model.O3AQI' },
        icon: {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 20,
            fillColor: "@Model.AQIColor1",
            fillOpacity: 1,
            strokeWeight: 0
        },
        map: map
    });

    var markerSensor2 = new google.maps.Marker({
        position: sensor2LatLong,
        title: "@Model.Second03AQI",
        label: { color: 'black', fontWeight: 'bold', fontSize: '20px', text: '@Model.Second03AQI' },
        icon: {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 20,
            fillColor: "@Model.AQIColor2",
            fillOpacity: 1,
            strokeWeight: 0
        },
        map: map
    });

    var Marker = new google.maps.Marker({
        position: factorySensor,
        title:"Factory Sensor",
        icon: {
            url: "http://maps.google.com/mapfiles/kml/pal3/icon59.png"
        },
        map: map
    });

}
</script>

<script>
    var trace2 = {
    x: ["Today", "Tomorrow", "3-Day", "5-day"],
    y: [@Model.O3AQI, @Model.PredictedAQITomorrow, @Model.PredictedAQI3Day, @Model.PredictedAQI5Day],
    type: 'scatter',
    };

    layout2 = {
        title: "5-day Predicted AQI",
        xaxis: {
            title: "Day"
            //autotick: false,
            //ticks: 'outside',
            //tick0: 0,
            //dtick: 1,
            //ticklen: 8,
            //tickwidth: 4,
            //tickcolor: '#000'
        },
        yaxis: {
            title: "AQI"
            //autotick: false,
            //ticks: 'outside',
            //tick0: 0,
            //dtick: 25,
            //ticklen: 200,
            //tickwidth: 4,
            //tickcolor: '#000'
        }
    }

    var data2 = [trace2];

    Plotly.newPlot('predictedAQI', data2, layout2, { showSendToCloud: true });
</script>
<script>


    var trace1 = {
        x: ["03/22", "03/23", "03/24", "03/25", "03/26", "03/27", "03/28"],
        y: [@Model.HistoricData[0], @Model.HistoricData[1], @Model.HistoricData[2], @Model.HistoricData[3], @Model.HistoricData[4], @Model.HistoricData[5], @Model.HistoricData[6]],
        type: 'scatter',
    };


    var layout = {
        title: "Past 7-Days AQI",
        xaxis: {
            title: "Date"
            //autotick: false,
            //ticks: 'outside',
            //tick0: 0,
            //dtick: 1,
            //ticklen: 8,
            //tickwidth: 4,
            //tickcolor: '#000'
        },
        yaxis: {
            title: "AQI"
            //autotick: false,
            //ticks: 'outside',
            //tick0: 0,
            //dtick: 25,
            //ticklen: 8,
            //tickwidth: 4,
            //tickcolor: '#000'
        }
    }
    var data = [trace1];

    Plotly.newPlot('myDiv', data, layout, { showSendToCloud: true });


</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=@APIKeys.SteveGoogleMapAPI&callback=initMap">
</script>